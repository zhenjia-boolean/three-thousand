{"version":3,"sources":["model/parse-key.ts","model/parse-data.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["parseKeys","getRawResultFromSouceData","text","result","items","split","item","mainKey","trim","replace","subItems","i","length","subKey","e","console","error","Error","handleResultOrder","newResult","fatternResult","Object","keys","mainItem","assign","TextArea","Input","lastTime","Date","now","deboundText","message","success","App","state","showTable","tableData","copyRow","ClipboardJS","document","querySelector","innerText","copyHeader","handleClear","value","handleClick","log","setState","renderTable","dataSource","map","keyName","index","title","dataIndex","key","type","id","style","marginRight","className","name","placeholder","autoFocus","index1","marginTop","marginBottom","onClick","this","marginLeft","background","color","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qTAAaA,EAAiB,CAC1B,oBACA,mDACA,mDACA,iCACA,mDACA,6CACA,6CACA,mDACA,mDACA,mDACA,6CACA,6CACA,mDACA,mDACA,iCACA,2BACA,iCACA,6CACA,mDACA,mDACA,gCACA,gCACA,iCACA,6CACA,yDACA,uCACA,iCACA,wCACA,4CACA,0BACA,qCACA,qEACA,6FACA,iDACA,0BACA,qBACA,mBACA,mBACA,qDACA,YACA,aACA,aACA,aACA,wDACA,+BACA,qCACA,yBACA,0BACA,gCACA,+BACA,+BACA,gEACA,gEACA,wDACA,2DACA,sCACA,gCACA,oEACA,4CACA,4CACA,8CACA,gCACA,gCACA,uCACA,qDACA,sEACA,4EACA,gCACA,2CACA,qEACA,oDACA,4BACA,qEACA,sCACA,iDACA,eACA,eACA,eACA,2BACA,qBACA,qBACA,uCACA,uCACA,uCACA,gCACA,gCACA,uCACA,+BACA,qCACA,8DACA,wDACA,+DACA,qEACA,eACA,qDACA,mCACA,mCACA,yCACA,2EACA,sBACA,0BACA,0BACA,0BACA,oBACA,yBACA,mBACA,oBACA,sCACA,gCACA,2BACA,oBACA,2DACA,0BACA,0BACA,+BACA,qBACA,qBACA,gCACA,4BACA,4BACA,iEACA,6BACA,iCACA,oDACA,gEACA,mDACA,gDACA,gDACA,mDACA,qDACA,qDACA,uDACA,uDACA,2BACA,mEACA,kDACA,8DACA,wFACA,wFACA,oDACA,qDACA,wCACA,wCACA,mCACA,qEACA,sCACA,4CACA,gCACA,+CACA,4BACA,oCACA,mCACA,6CACA,uCACA,uCACA,qBACA,qBACA,iCACA,4CC7JG,SAASC,EAA0BC,GACxC,IADsD,EAClDC,EAAc,GAEZC,EAAQF,EAAKG,MAAM,UAH6B,cAInCD,GAJmC,IAItD,2BAA0B,CAAC,IAAhBE,EAAe,QACpBC,EAAUD,EAAKD,MAAM,UAAK,GAAGG,OAEjC,GAAgB,MAAZD,GAAgC,KAAZA,EAAxB,CAIKJ,EAFLI,EAAUA,EAAQE,QAAQ,MAAO,OAG/BN,EAAOI,GAAW,IA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","file":"static/js/main.c5b43f14.chunk.js","sourcesContent":["export const parseKeys: any = [\n    \"血沉[ESR]\",\n    \"有核红细胞绝对值\",\n    \"有核红细胞百分率\",\n    \"白细胞计数\",\n    \"中性粒细胞百分率\",\n    \"淋巴细胞百分率\",\n    \"单核细胞百分率\",\n    \"嗜酸粒细胞百分率\",\n    \"嗜碱粒细胞百分率\",\n    \"中性粒细胞绝对值\",\n    \"淋巴细胞绝对值\",\n    \"单核细胞绝对值\",\n    \"嗜酸粒细胞绝对值\",\n    \"嗜碱粒细胞绝对值\",\n    \"红细胞计数\",\n    \"血红蛋白\",\n    \"红细胞比积\",\n    \"平均红细胞体积\",\n    \"平均血红蛋白浓度\",\n    \"平均血红蛋白含量\",\n    \"RBC分布宽度SD\",\n    \"RBC分布宽度CV\",\n    \"血小板计数\",\n    \"血小板平均体积\",\n    \"血小板体积分布宽度\",\n    \"大血小板比率\",\n    \"血小板压积\",\n    \"超敏C反应蛋白\",\n    \"白球蛋白比值[A/G]\",\n    \"球蛋白[Glb]\",\n    \"间接胆红素[IB]\",\n    \"游离甲状腺素[FT4-国际单位]\",\n    \"游离三碘甲状腺原氨酸[FT3-国际单位]\",\n    \"尿素/肌酐比值[urea/Cr]\",\n    \"葡萄糖[GLU]\",\n    \"尿素[urea]\",\n    \"肌酐[Cr]\",\n    \"尿酸[UA]\",\n    \"二氧化碳结合力[CO2-CP]\",\n    \"钾[K]\",\n    \"钠[Na]\",\n    \"氯[Cl]\",\n    \"钙[Ca]\",\n    \"丙氨酸氨基转移酶[ALT]\",\n    \"总胆红素[TB]\",\n    \"直接胆红素[DB]\",\n    \"总蛋白[TP]\",\n    \"白蛋白[Alb]\",\n    \"总胆汁酸[TBA]\",\n    \"甘油三脂[TG]\",\n    \"总胆固醇[TC]\",\n    \"高密度脂蛋白胆固醇[HDL-C]\",\n    \"低密度脂蛋白胆固醇[LDL-C]\",\n    \"天门冬氨基转移酶[AST]\",\n    \"L-γ-谷氨酰基转肽酶[GGT]\",\n    \"碱性磷酸酶[ALP]\",\n    \"胆碱脂酶[CHE]\",\n    \"游离三碘甲状腺原氨酸[FT3]\",\n    \"游离甲状腺素[FT4]\",\n    \"促甲状腺激素[TSH]\",\n    \"糖化血红蛋白[HbA1c]\",\n    \"甲胎蛋白[AFP]\",\n    \"癌胚抗原[CEA]\",\n    \"糖类抗原19-9[CA19-9]\",\n    \"抗丙肝病毒抗体[HCV-Ab]\",\n    \"乙肝病毒表面抗原定量(HBsAg)\",\n    \"抗梅毒螺旋体特异性抗体[TP-Ab]\",\n    \"HIV 抗原/抗体\",\n    \"凝血酶原时间[PT]\",\n    \"血浆凝血酶原时间比值[PT-R]\",\n    \"PT国际标准化比值[INR]\",\n    \"PT活动度[PT%]\",\n    \"活化部分凝血激酶时间[APTT]\",\n    \"纤维蛋白原[FIB]\",\n    \"凝血酶凝固时间[TT]\",\n    \"颜色\",\n    \"性状\",\n    \"虫卵\",\n    \"隐血试验\",\n    \"红细胞\",\n    \"白细胞\",\n    \"免疫球蛋白G[IgG]\",\n    \"免疫球蛋白M[IgM]\",\n    \"免疫球蛋白A[IgA]\",\n    \"血清补体3[C3]\",\n    \"血清补体4[C4]\",\n    \"血清总补体[CH50]\",\n    \"前白蛋白[PA]\",\n    \"糖类抗原724[CA724]\",\n    \"结核分枝杆菌抗体IgG[Tb-IgG]\",\n    \"前列腺抗原比值[FPSA/TPSA]\",\n    \"总前列腺特异性抗原[TPSA]\",\n    \"游离前列腺特异性抗原[FPSA]\",\n    \"管型\",\n    \"尿沉渣项目(镜检法)\",\n    \"红细胞(手工)\",\n    \"白细胞(手工)\",\n    \"上皮细胞(手工)\",\n    \"尿液常规项目（干化学法）\",\n    \"尿糖(U-GLU)\",\n    \"蛋白质(PRO)\",\n    \"胆红素(BIL)\",\n    \"尿胆原(UBG)\",\n    \"酮体(KET)\",\n    \"酸碱度(PH)\",\n    \"比重(SG)\",\n    \"潜血(BLD)\",\n    \"白细胞酯酶(LEU)\",\n    \"亚硝酸盐(NIT)\",\n    \"透明度(TURB)\",\n    \"颜色(COL)\",\n    \"尿液沉渣项目(流式法)\",\n    \"红细胞(RBC)\",\n    \"白细胞(WBC)\",\n    \"上皮细胞(EC)\",\n    \"管型(CAST)\",\n    \"结晶(XTAL)\",\n    \"类酵母菌(YLC)\",\n    \"粘液丝(MUCUS)\",\n    \"电导率(Cond.)\",\n    \"未受损红细胞百分比(NLRBC%)\",\n    \"EB病毒DNA[EBV-DNA]\",\n    \"腺病毒DNA[ADV-DNA]\",\n    \"人巨细胞病毒DNA[HCMV-DNA]\",\n    \"结核感染T细胞斑点实验\",\n    \"阴性对照孔斑点数\",\n    \"抗原A(ESAT-6)孔斑点数\",\n    \"抗原B(CFP-10)孔斑点数\",\n    \"阳性对照孔斑点数\",\n    \"抗原A孔-阴性对照孔\",\n    \"抗原B孔-阴性对照孔\",\n    \"抗原A孔-2*阴性对照孔\",\n    \"抗原B孔-2*阴性对照孔\",\n    \"真菌镜检\",\n    \"抗髓过氧化物酶抗体[MPO-ANCA]\",\n    \"抗蛋白酶3抗体[PR3-ANCA]\",\n    \"抗肾小球基底膜抗体[GBM]\",\n    \"抗中性粒细胞胞浆抗体核周型[pANCA]\",\n    \"抗中性粒细胞胞浆抗体胞浆型[cANCA]\",\n    \"抗核糖体P蛋白抗体\",\n    \"抗线粒体M2抗体[PBC-AMA-M2]\",\n    \"抗PM-Scl抗体[Anti-PM-Scl]\",\n    \"抗Scl-70抗体[Anti-Scl-70]\",\n    \"抗SS-A抗体[Anti-SSA]\",\n    \"抗增殖细胞核抗原抗体[PCNA]\",\n    \"抗RO-52抗体[Anti-RO-52]\",\n    \"抗组蛋白抗体[AHA]\",\n    \"抗Sm抗体[Anti-Sm]\",\n    \"抗着丝点抗体[CENP B]\",\n    \"抗nRNP/Sm抗体\",\n    \"抗Jo-1抗体[Anti-Jo-1]\",\n    \"抗SS-B抗体[Anti-SSB]\",\n    \"抗核小体抗体[AnuA]\",\n    \"ANA核型(细胞核):\",\n    \"ANA核型(细胞浆):\",\n    \"均质型\",\n    \"颗粒型\",\n    \"胞浆颗粒型\",\n    \"抗双链DNA抗体[dsDNA]\"\n];","import { parseKeys } from \"./parse-key\";\n\nexport function getRawResultFromSouceData(text: string) {\n  let result: any = {};\n  // ; 代表一个大项\n  const items = text.split('；');\n  for (const item of items) {\n    let mainKey = item.split(\"：\")[0].trim();\n    // bad case.\n    if (mainKey === \"\\\"\" || mainKey === \"\") continue;\n    // eslint-disable-next-line\n    mainKey = mainKey.replace(/\\\"/g, \"\")\n\n    if (!result[mainKey]) {\n      result[mainKey] = {};\n    }\n\n    try {\n      const keyValues = item.split(\"：\")[1].trim();\n      const subItems = keyValues.split('，');\n      for (let i = 0; i < subItems.length; i += 2) {\n        let subKey = subItems[i].trim();\n        subKey = subKey.replace(/#/g, \"\");\n        result[mainKey][subKey] = subItems[i + 1].trim();\n      }\n    } catch (e) {\n      console.error(e);\n      throw new Error(e);\n    }\n  }\n  return result;\n}\n\n/**\n * 把提取到的 object 按默认的 keys 排序\n * 没有 keys 的顺序，通通按空处理；\n */\nexport function handleResultOrder(result: any) {\n  const keys = Object.keys(result);\n  const newResult: any = {};\n\n  const fatternResult: any = {};\n  // 结果拍平\n  for (const key of keys) {\n    const mainItem = result[key] || {};\n    Object.assign(fatternResult, mainItem);\n  }\n\n  // 重新设置排序\n  for (const item of parseKeys) {\n    newResult[item] = fatternResult[item] || \"空\";\n  }\n\n  // for (const key of keys) {\n  //   const mainItem = result[key] || {};\n  //   const order = parseKeys[key];\n  //   if (!order) continue;\n  //   newResult[key] = {};\n\n  //   // 重新设置排序\n  //   for (const item of order) {\n  //     newResult[key][item] = mainItem[item] || \"空\";\n  //   }\n  // }\n  return newResult;\n}","import ClipboardJS from 'clipboard';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { getRawResultFromSouceData, handleResultOrder } from './model/parse-data';\nimport { parseKeys } from './model/parse-key';\nimport { Button, Input, message, Table } from 'antd';\nimport Column from 'antd/lib/table/Column';\n// import ColumnGroup from 'antd/lib/table/ColumnGroup';\nconst { TextArea } = Input;\n\nconst example = `血沉ESR：血沉[ESR]，26mm/h； 血常规五分类+hsCRP(临)：有核红细胞百分率，0.000%，有核红细胞绝对值，0.00E+9/L，#白细胞计数，7.87E+9/L，中性粒细胞百分率，66.0%，淋巴细胞百分率，19.9%，单核细胞百分率，8.4%，嗜酸粒细胞百分率，5.1%，嗜碱粒细胞百分率，0.6%，中性粒细胞绝对值，5.19E+9/L，淋巴细胞绝对值，1.57E+9/L，单核细胞绝对值，0.66E+9/L，嗜酸粒细胞绝对值，0.40E+9/L，嗜碱粒细胞绝对值，0.05E+9/L，#红细胞计数，5.87E+12/L，#血红蛋白，131g/L，红细胞比积，42.8%，平均红细胞体积，72.9fL，平均血红蛋白浓度，306g/L，平均血红蛋白含量，22.3Pg，RBC分布宽度SD，37.6fL，RBC分布宽度CV，14.4%，#血小板计数，466E+9/L，血小板平均体积，9.4fL，血小板体积分布宽度，9.7fL，大血小板比率，19.7%，血小板压积，0.44%，超敏C反应蛋白，32.920mg/L； 肾功五项+电解质四项+肝功六项+血脂四项+谷草转氨酶AST+γ谷氨酰基转移酶GGT+碱性磷酸酶ALP+胆碱脂酶CHE+甲功三项：白球蛋白比值[A/G]，1.0，球蛋白[Glb]，32.0g/L，间接胆红素[IB]，3.7umol/L，游离甲状腺素[FT4-国际单位]，11.96pmol/L，游离三碘甲状腺原氨酸[FT3-国际单位]，5.36pmol/L，尿素/肌酐比值[urea/Cr]，0.07，葡萄糖[GLU]，4.78mmol/L，尿素[urea]，4.22mmol/L，肌酐[Cr]，64umol/L，尿酸[UA]，444umol/L，二氧化碳结合力[CO2-CP]，27.6mmol/L，#钾[K]，4.87mmol/L，#钠[Na]，141mmol/L，#氯[Cl]，104.0mmol/L，钙[Ca]，2.19mmol/L，#丙氨酸氨基转移酶[ALT]，9U/L，总胆红素[TB]，4.7umol/L，直接胆红素[DB]，1.0umol/L，#总蛋白[TP]，63.8g/L，#白蛋白[Alb]，31.8g/L，总胆汁酸[TBA]，9.1umol/L，#甘油三脂[TG]，0.68mmol/L，#总胆固醇[TC]，2.70mmol/L，#高密度脂蛋白胆固醇[HDL-C]，0.86mmol/L，#低密度脂蛋白胆固醇[LDL-C]，1.74mmol/L，#天门冬氨基转移酶[AST]，10U/L，#L-γ-谷氨酰基转肽酶[GGT]，12U/L，#碱性磷酸酶[ALP]，118U/L，胆碱脂酶[CHE]，4858U/L，游离三碘甲状腺原氨酸[FT3]，3.48pg/ml，游离甲状腺素[FT4]，0.92ng/dl，#促甲状腺激素[TSH]，2.342mIU/L； 糖化血红蛋白：糖化血红蛋白[HbA1c]，5.6%； 肿瘤三项：#甲胎蛋白[AFP]，1.4ng/ml，#癌胚抗原[CEA]，0.9ng/ml，糖类抗原19-9[CA19-9]，< 2.00U/ml； 术前四项（HIV/TP/HCV/HBV)：#抗丙肝病毒抗体[HCV-Ab]，0.12(阴性)S/CO，#乙肝病毒表面抗原定量(HBsAg)，0.00(阴性)IU/ml，抗梅毒螺旋体特异性抗体[TP-Ab]，0.10(阴性)S/CO，HIV 抗原/抗体，0.38(阴性)S/CO； 凝血四项[血液室]：凝血酶原时间[PT]，12.80秒(s)，血浆凝血酶原时间比值[PT-R]，0.98，PT国际标准化比值[INR]，0.97，PT活动度[PT%]，105.00%，活化部分凝血激酶时间[APTT]，44.10秒(s)，纤维蛋白原[FIB]，5.70g/L，凝血酶凝固时间[TT]，14.30秒(s)； 大便常规+隐血(体液)：颜色，黄褐色，性状，软便，虫卵，未见/LP，隐血试验，阳性，红细胞，未见/HP，白细胞，未见/HP； 免疫功能六项+前白蛋白：免疫球蛋白G[IgG]，13.15g/L，免疫球蛋白M[IgM]，0.85g/L，免疫球蛋白A[IgA]，2.300g/L，血清补体3[C3]，1.40g/L，血清补体4[C4]，0.24g/L，血清总补体[CH50]，48.8U/mL，前白蛋白[PA]，155.9mg/L； 糖类抗原72-4：糖类抗原724[CA724]，3.9IU/ml； 结核抗体：结核分枝杆菌抗体IgG[Tb-IgG]，阴性； 前列腺特异性抗原(2项)：前列腺抗原比值[FPSA/TPSA]，0.35，#总前列腺特异性抗原[TPSA]，0.254ng/mL，游离前列腺特异性抗原[FPSA]，0.090ng/ml； 尿常规分析：管型，0/LP，尿沉渣项目(镜检法)，.，红细胞(手工)，0/HP，白细胞(手工)，3-6/HP，上皮细胞(手工)，1-2/HP，尿液常规项目（干化学法），.，#尿糖(U-GLU)，阴性，#蛋白质(PRO)，+-，胆红素(BIL)，阴性，#尿胆原(UBG)，阴性，酮体(KET)，阴性，酸碱度(PH)，6.0，比重(SG)，1.027，#潜血(BLD)，阴性，白细胞酯酶(LEU)，阴性，亚硝酸盐(NIT)，阴性，透明度(TURB)，微浑，颜色(COL)，黄色，尿液沉渣项目(流式法)，.，红细胞(RBC)，2.9/ul，白细胞(WBC)，38.3/ul，上皮细胞(EC)，10.3/ul，管型(CAST)，0.02/ul，结晶(XTAL)，0.00/ul，类酵母菌(YLC)，0.00/ul，粘液丝(MUCUS)，5.27/ul，电导率(Cond.)，23.10mS/cm，未受损红细胞百分比(NLRBC%)，39.10%； EB/巨细胞/腺病毒DNA(外周血)：EB病毒DNA[EBV-DNA]，阴性(<500)拷贝，腺病毒DNA[ADV-DNA]，阴性(<500)拷贝，人巨细胞病毒DNA[HCMV-DNA]，阴性(<500)拷贝； *外周血结核感染T细胞检测(T-SPOT)：结核感染T细胞斑点实验，阴性，  阴性对照孔斑点数，0个/孔，  抗原A(ESAT-6)孔斑点数，0个/孔，  抗原B(CFP-10)孔斑点数，0个/孔，  阳性对照孔斑点数，318个/孔，抗原A孔-阴性对照孔，0，抗原B孔-阴性对照孔，0，抗原A孔-2*阴性对照孔，0，抗原B孔-2*阴性对照孔，0； 大便真菌涂片检查：真菌镜检，未见真菌； 血管炎五项：抗髓过氧化物酶抗体[MPO-ANCA]，阴性(-)，抗蛋白酶3抗体[PR3-ANCA]，阴性(-)，抗肾小球基底膜抗体[GBM]，阴性(-)，抗中性粒细胞胞浆抗体核周型[pANCA]，阴性，抗中性粒细胞胞浆抗体胞浆型[cANCA]，阴性； ENA多肽抗体谱+抗双链DNA抗体ds-DNA+抗核抗体ANA：抗核糖体P蛋白抗体，阴性(-)，抗线粒体M2抗体[PBC-AMA-M2]，阴性(-)，抗PM-Scl抗体[Anti-PM-Scl]，阴性(-)，抗Scl-70抗体[Anti-Scl-70]，阴性(-)，抗SS-A抗体[Anti-SSA]，阴性(-)，抗增殖细胞核抗原抗体[PCNA]，阴性(-)，抗RO-52抗体[Anti-RO-52]，阴性(-)，抗组蛋白抗体[AHA]，阴性(-)，抗Sm抗体[Anti-Sm]，阴性(-)，抗着丝点抗体[CENP B]，阴性(-)，抗nRNP/Sm抗体，阴性(-)，抗Jo-1抗体[Anti-Jo-1]，阴性(-)，抗SS-B抗体[Anti-SSB]，阴性(-)，抗核小体抗体[AnuA]，阴性(-)，ANA核型(细胞核):，-，ANA核型(细胞浆):，-，均质型，>1:1000(阳性)，颗粒型，1:1000(阳性)，胞浆颗粒型，1:100(阳性)，抗双链DNA抗体[dsDNA]，阴性(<50.0)IU/ml；`;\n\nlet lastTime = Date.now();\nfunction deboundText() {\n  if (Date.now() - lastTime < 1000) return;\n  message.success('复制成功，请到 Excel 粘贴确认');\n  lastTime = Date.now();\n}\n\nclass App extends Component {\n  state = {\n    showTable: false,\n  }\n  // tableData: any = handleResultOrder(getRawResultFromSouceData(example));\n  tableData: any;\n  copyRow = new ClipboardJS('#copy-row', {\n    text: function() {\n      deboundText();\n      return (document.querySelector('.ant-table-tbody')! as any).innerText;\n    }\n  });\n  copyHeader = new ClipboardJS('#copy-header', {\n    text: function() {\n      deboundText();\n      return (document.querySelector('.ant-table-thead')! as any).innerText;\n    },\n  });\n  handleClear = () => {\n    const textArea = document.querySelector('#paste-data') as any;\n    textArea.value = \"\";\n  }\n\n  handleClick = () => {\n    const textArea = document.querySelector('#paste-data') as any;\n    const value = textArea.value;\n    try {\n      let result = getRawResultFromSouceData(value);\n      result = handleResultOrder(result);\n      console.log(result);\n      this.tableData = result;\n    } catch (e) {\n      message.error('数据有误，请按示例输入数据。');\n      this.setState({\n        showTable: false,\n      });\n    }\n    this.setState({\n      showTable: true,\n    });\n  }\n\n  renderTable = () => {\n    if (!this.state.showTable || !this.tableData) return null;\n\n    // const keys = Object.keys(this.tableData);\n    // const data: any = {}\n    // for (const key of keys) {\n    //   Object.assign(data, this.tableData[key]);\n    // }\n\n    return (\n      <div>\n        <Table dataSource={[this.tableData]}>\n          {\n            parseKeys.map((keyName: any, index: any) => {\n              return <Column title={keyName} dataIndex={keyName} key={keyName} />\n            })\n          }\n          {/* { Object.keys(parseKeys).map((item, index) => {\n            return (<ColumnGroup title={item}>\n              { parseKeys[item].map((subItem: any, subIndex: any) => {\n                return <Column title={subItem} dataIndex={subItem} key={subItem} />\n              })}\n            </ColumnGroup>)\n          }) } */}\n        </Table>\n        <Button type=\"primary\" id=\"copy-header\" style={{ marginRight: 10 }}>复制行头数据</Button>\n        <Button type=\"primary\" id=\"copy-row\">复制行数据</Button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top\">\n          {/* @ts-ignore */}\n          <TextArea name=\"\" id=\"paste-data\" placeholder={`请粘贴数据，例如 ${example}`} autoFocus={true}></TextArea>\n          <div className=\"paste-list\">\n            <h3>程序会按以下顺序解析：</h3>\n            {/* {\n              Object.keys(parseKeys).map((key, index) => {\n                return (<div className=\"main-key\" key={index}>\n                  {key}\n                  {\n                    parseKeys[key].map((item: any, index1: number) => {\n                      const key = index + '-' + index1;\n                      return <div className=\"sub-key\" key={key}>{item}</div>\n                    })\n                  }\n                </div>);\n              })\n            } */}\n            {\n              parseKeys.map((item: any, index1: number) => {\n                const key = item + '-' + index1;\n                return <div className=\"sub-key\" key={key}>{item}</div>\n              })\n            }\n          </div>\n        </div>\n        <div className=\"bottom\" style={{ marginTop: 10, marginBottom: 10 }}>\n          <Button type=\"primary\" onClick={this.handleClick}>转换</Button>\n          <Button type=\"primary\" style={{ marginLeft: 20, background: \"#faf1d1\", color: \"black\"}} onClick={this.handleClear}>清空</Button>\n        </div>\n        { this.renderTable() }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}